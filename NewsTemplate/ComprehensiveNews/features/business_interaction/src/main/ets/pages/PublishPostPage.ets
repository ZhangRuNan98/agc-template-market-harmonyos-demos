import { BreakpointNameEnum, CommonConstants, RouterUtils } from 'lib_common'
import { NavHeaderBar } from 'lib_widget'
import { PostImgVideoItem, PublishPostComp } from 'module_post'
import { PublishPostViewModel } from '../viewmodels/PublishPostVM'

@Builder
export function PublishPostPageBuilder() {
  PublishPostPage()
}

@ComponentV2
export struct PublishPostPage {
  vm: PublishPostViewModel = new PublishPostViewModel();

  aboutToAppear(): void {
    this.vm.onKeyBoard();
  }

  aboutToDisappear(): void {
    this.vm.offKeyBoard();
  }

  build() {
    NavDestination() {
      NavHeaderBar({
        title: '',
        rightPartBuilder: () => {
          this.barRight()
        },
        onBack: () => {
          const customBack = this.vm.onBackPressed();
          if (!customBack) {
            RouterUtils.pop();
          }
        },
      })
      Column() {
        PublishPostComp({
          fontRatio: this.vm.settingInfo.fontSizeRatio,
          columnsNum: this.columnsNum,
          onChange: (body: string, mediaList: PostImgVideoItem[]) => {
            this.vm.body = body;
            this.vm.mediaList = mediaList;
          },
        })
      }
      .layoutWeight(1)
      .padding({
        left: CommonConstants.PADDING_PAGE,
        right: CommonConstants.PADDING_PAGE,
        top: CommonConstants.PADDING_M,
        bottom: this.vm.paddingBottom,
      })
    }
    .hideTitleBar(true)
    .onBackPressed(() => {
      return this.vm.onBackPressed();
    })
  }

  @Computed
  get columnsNum() {
    if ([BreakpointNameEnum.MD, BreakpointNameEnum.LG].includes(this.vm.breakPointModel.currentBreakpoint)) {
      return 6;
    }
    return 3;
  }

  @Builder
  barRight() {
    Row() {
      Button('发表')
        .width(72)
        .height(40)
        .fontSize($r('sys.float.Body_L'))
        .fontColor(this.vm.enablePublish() ? $r('sys.color.font_on_primary') : $r('sys.color.font_tertiary'))
        .backgroundColor(this.vm.enablePublish() ? $r('app.color.app_theme') :
        $r('sys.color.comp_background_tertiary'))
        .onClick(() => {
          this.vm.publishPost();
        })
    }
    .layoutWeight(1)
    .justifyContent(FlexAlign.End)
  }
}